// out: false, compress: false, sourceMap: false

//----------------------------
//
//  mixins.less v0.1.5
//  http://mixinsless.com/
//  Reuse snippets & Cross-browser private properties snippets.
//----------------------------

// Border style
.border(@pos: all, @width: 1px, @style: solid, @color: @border-color)
  when (@pos=top), (@pos=right), (@pos=bottom), (@pos=left) {
    border-@{pos}: @width @style @color;
}
.border(@pos: all, @width: 1px, @style: solid, @color: @border-color)
  when (default()) {
    border: @width @style @color;
}

// Border radius with the same argument
// -------------------------
.rounded(@radius: 3px) {
    -webkit-border-radius:@radius;
    -moz-border-radius:@radius;
    border-radius:@radius;
    -webkit-background-clip:padding-box;
    -moz-background-clip:padding-box;
    background-clip:padding-box;
}

// Opacity
// -------------------------
.opacity(@opacity) {
    opacity:@opacity;
    @opacityIE : @opacity * 100;
    filter:~"alpha(opacity=@{opacityIE})";
}

// Gradient
// -------------------------
.gradient(@start: #000000, @stop: #FFFFFF) {
    background:(@start + @stop)/2;
    background:-webkit-gradient(linear, left top, left bottom, color-stop(0, @start), color-stop(1, @stop));
    background:-moz-linear-gradient(center top, @start 0%, @stop 100%);
}

// Transform rotation
// -------------------------
.rotation(@deg:5deg) {
    -webkit-transform:rotate(@deg);
    -moz-transform:rotate(@deg);
    transform:rotate(@deg);
}

// Transform scale
// -------------------------
.scale(@ratio:1.5) {
    -webkit-transform:scale(@ratio);
    -moz-transform:scale(@ratio);
    transform:scale(@ratio);
}

// Translate
// -------------------------
.translate(@x:0, @y:0) {
    -moz-transform:translate(@x, @y);
    -webkit-transform:translate(@x, @y);
    -o-transform:translate(@x, @y);
    -ms-transform:translate(@x, @y);
    transform:translate(@x, @y);
}

// Translate3d
// -------------------------
.translate3d(@x, @y, @z) {
    -webkit-transform:translate3d(@x, @y, @z);
    -moz-transform:translate3d(@x, @y, @z);
    -o-transform:translate3d(@x, @y, @z);
    transform:translate3d(@x, @y, @z);
}

// Background clipping
// -------------------------
.background-clip(@clip) {
    -webkit-background-clip:@clip;
    -moz-background-clip:@clip;
    background-clip:@clip;
}

// Import font
// -------------------------
.font-face(@fontFamily, @fileName, @style, @weight) {
    @font-face{
        font-family:@fontFamily;
        font-style:@style;
        font-weight:@weight;
        src:url('@{fileName}.eot');
        src:local('@fontFamily'), url('@{fileName}.eot?#iefix') format('embedded-opentype'), url('@{fileName}.woff') format('woff'), url('@{fileName}.ttf') format('truetype'), url('@{fileName}.svg#@{fontFamily}') format('svg'), url("@{fileName}.otf") format('opentype');
    }
}

// Clearfix
// -------------------------
.clearfix() {
    zoom:1;
    &:before{
        content:'';
        display:block;
    }
    &:after{
        content:'';
        display:table;
        clear:both;
    }
}

// Force line breaks
// -------------------------
.word-break() {
    word-break:break-all;
    word-wrap:break-word;
    white-space: normal;
}

// No wrap
// -------------------------
.no-wrap() {
    word-break: normal;
    word-wrap: normal;
    white-space: nowrap;
}

// Text overflow with(...)
// -------------------------
// Requires inline-block or block for proper styling
.text-overflow() {
    overflow:hidden;
    text-overflow:ellipsis;
    white-space:nowrap;
    max-width:100%;
}

.line-overflow(@line) {
    overflow:hidden;
    text-overflow:ellipsis;
    display:-webkit-box;
    -webkit-line-clamp: @line; /* number of lines to show */
    /*! autoprefixer: off */
    -webkit-box-orient: vertical;
}

// Alpha background
// -------------------------
.alpha-background(@rgb:#000,@alpha:.5){
    @rgba-color:fade(@rgb,@alpha*100);
    @argb-color:argb(@rgba-color);
    background-color:@rgba-color;
    filter:~"progid:DXImageTransform.Microsoft.gradient(startColorstr='@{argb-color}', endColorstr='@{argb-color}', GradientType=0)\9";
    zoom:1;
}

// Controls the selection model of an element.
// -------------------------
.user-select(@arguments:none){
    -webkit-user-select: @arguments;
    -moz-user-select: @arguments;
    -ms-user-select: @arguments;
    user-select: @arguments;
}

// Flexbox display
// -------------------------
// flex or inline-flex
.flex-display(@display: flex) {
    display: ~"-webkit-@{display}";
    display: ~"-moz-@{display}";
    display: @display;
}


// Triangle
// -------------------------
.triangle(@direction: down, @size: 10px, @color: #000){
    display: inline-block;
    width: 0;
    height: 0;
    font-size: 0;
    line-height: 0;
    overflow: hidden;
}
.triangle(@direction: down, @size: 10px, @color: #000) when (@direction = down){
    border-color: @color transparent transparent transparent;
    border-style: solid dashed dashed dashed;
    border-width: @size @size 0 @size;
}
.triangle(@direction: down, @size: 10px, @color: #000) when(@direction = left){
    border-color: transparent @color transparent transparent;
    border-style: dashed solid dashed dashed;
    border-width: @size @size @size 0;
}
.triangle(@direction: down, @size: 10px, @color: #000) when(@direction = up){
    border-color: transparent transparent @color transparent;
    border-style: dashed dashed solid dashed;
    border-width: 0 @size @size @size;
}
.triangle(@direction: down, @size: 10px, @color: #000) when(@direction = right){
    border-color: transparent transparent transparent @color;
    border-style: dashed dashed dashed solid;
    border-width: @size 0 @size @size;
}

// Arrow
// -------------------------
.arrow(@direction: down, @size: 10px, @color: #000, @borderColor: #c00){
    position: absolute;
    width: 0;
    height: 0;
    font-size: 0;
    &:after{
        content: '';
        position: absolute;
        width: 0;
        height: 0;
        font-size: 0;
    }
}
.arrow(@direction: down, @size: 10px, @color: #fff, @borderColor: #ccc) when (@direction = down){
    border-color: @borderColor transparent transparent transparent;
    border-style: solid dashed dashed dashed;
    border-width: @size @size 0 @size;
    &:after{
        left: -@size;
        top: -(@size+3);
        border-color: @color transparent transparent transparent;
        border-style: solid dashed dashed dashed;
        border-width: @size @size 0 @size;
    }
}
.arrow(@direction: down, @size: 10px, @color: #fff, @borderColor: #ccc) when (@direction = left){
    border-color: transparent @borderColor transparent transparent;
    border-style: dashed solid dashed dashed;
    border-width: @size @size @size 0;
    &:after{
        left: 3px;
        top: -@size;
        border-color: transparent @color transparent transparent;
        border-style: dashed solid dashed dashed;
        border-width: @size @size @size 0;
    }
}
.arrow(@direction: down, @size: 10px, @color: #fff, @borderColor: #ccc) when (@direction = up){
    border-color: transparent transparent @borderColor transparent;
    border-style: dashed dashed solid dashed;
    border-width: 0 @size @size @size;
    &:after{
        left: -@size;
        top: 3px;
        border-color: transparent transparent @color transparent;
        border-style: dashed dashed solid dashed;
        border-width: 0 @size @size @size;
    }
}
.arrow(@direction: down, @size: 10px, @color: #fff, @borderColor: #ccc) when (@direction = right){
    border-color: transparent transparent transparent @borderColor;
    border-style: dashed dashed dashed solid;
    border-width: @size 0 @size @size;
    &:after{
        left: -(@size+3);
        top: -@size;
        border-color: transparent transparent transparent @color;
        border-style: dashed dashed dashed solid;
        border-width: @size 0 @size @size;
    }
}
